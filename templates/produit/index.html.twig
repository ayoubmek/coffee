{% extends 'base.html.twig' %}

{% block title %}Products{% endblock %}
{% block page_css %}
<style>
    [data-bs-theme=light] body:not(.app-blank) {
        background-image: url("{{ asset('assets/media/patterns/header-bg1.jpg') }}") !important;
    }
</style>
{% endblock %}
{% block body %}
<script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>
<meta name="csrf-token" content="{{ csrf_token('swap_products') }}">

<body id="kt_body" class="header-fixed header-tablet-and-mobile-fixed toolbar-enabled">
    <script>
        var defaultThemeMode = "light"; 
        var themeMode; 
        if ( document.documentElement ) { 
            if ( document.documentElement.hasAttribute("data-bs-theme-mode")) { 
                themeMode = document.documentElement.getAttribute("data-bs-theme-mode"); 
            } else { 
                if ( localStorage.getItem("data-bs-theme") !== null ) { 
                    themeMode = localStorage.getItem("data-bs-theme"); 
                } else { 
                    themeMode = defaultThemeMode; 
                } 
            } 
            if (themeMode === "system") { 
                themeMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"; 
            } 
            document.documentElement.setAttribute("data-bs-theme", themeMode); 
        }
    </script>


    <div class="toolbar py-5 pb-lg-15" id="kt_toolbar">
	<div id="kt_toolbar_container" class="container-xxl d-flex flex-stack flex-wrap">
		<div class="page-title d-flex flex-column me-3">
			<h1 class="d-flex text-white fw-bold my-1 fs-3">Products</h1>
			<ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-1">
				<li class="breadcrumb-item text-white opacity-75">
					<a href="/" class="text-white text-hover-primary">Home</a>
				</li>
			 
 				<li class="breadcrumb-item">
					<span class="bullet bg-white opacity-75 w-5px h-2px"></span>
				</li>
				<li class="breadcrumb-item text-white opacity-75">Products</li>
			</ul>
		</div>

        
		<div class="d-flex align-items-center py-3 py-md-1">
<!-- Switch Products Dropdown Button -->
<div class="d-flex align-items-center py-3 py-md-1">
    <div class="me-4">
        <a href="#" class="btn btn-custom btn-active-white btn-flex btn-color-white btn-active-color-white"
           data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
            <i class="ki-duotone ki-swap fs-5 me-1">
                <span class="path1"></span>
                <span class="path2"></span>
            </i>
            Switch Products
        </a>

        <!-- Switch Products Dropdown Menu -->
        <div class="menu menu-sub menu-sub-dropdown w-250px w-md-300px p-3" data-kt-menu="true" id="products-switch-menu">
            <div class="fs-5 text-dark fw-bold mb-3">Select 2 Products to Swap</div>
            
            <div class="list-group" style="max-height: 300px; overflow-y: auto;">
                {% for produit in produits %}
                    <label class="list-group-item d-flex justify-content-between align-items-center">
                        <span>{{ produit.nom }} ({{ produit.prix }} TND)</span>
                        <input type="checkbox" class="select-product" data-id="{{ produit.id }}">
                    </label>
                {% endfor %}
            </div>

            <div class="d-flex justify-content-end mt-3">
                <button type="button" class="btn btn-sm btn-primary" id="swap-btn">Swap Selected</button>
            </div>
        </div>
    </div>
</div>

<!-- CSRF Token -->
<meta name="csrf-token" content="{{ csrf_token('swap_products') }}">


			<div class="me-4">
				<a href="#" class="btn btn-custom btn-active-white btn-flex btn-color-white btn-active-color-white"
					data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
					<i class="ki-duotone ki-filter fs-5 me-1">
						<span class="path1"></span>
						<span class="path2"></span>
					</i>
					Filter
				</a>
		<div class="menu menu-sub menu-sub-dropdown w-250px w-md-300px" data-kt-menu="true" id="products-filter-menu">
    <div class="px-7 py-5">
        <div class="fs-5 text-dark fw-bold">Filter Products</div>
    </div>
    <div class="separator border-gray-200"></div>
    <form id="filter-form" class="px-7 py-5">
        <div class="mb-10">
            <label class="form-label fw-semibold">Category:</label>
            <select class="form-select form-select-solid" name="category" id="filter-category">
                <option value="">All Categories</option>
                {% for category in categories %}
                    <option value="{{ category.id }}">{{ category.nom }}</option>
                {% endfor %}
            </select>
        </div> 
        <div class="mb-10">
            <label class="form-label fw-semibold">Price Range:</label>
            <div class="d-flex align-items-center">
                <input type="number" class="form-control form-control-solid me-2" placeholder="Min" name="min_price" id="filter-min-price">
                <span class="text-muted">-</span>
                <input type="number" class="form-control form-control-solid ms-2" placeholder="Max" name="max_price" id="filter-max-price">
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button type="reset" class="btn btn-sm btn-light btn-active-light-primary me-2" data-kt-menu-dismiss="true" id="reset-filters">Reset</button>
            <button type="button" class="btn btn-sm btn-primary" data-kt-menu-dismiss="true" id="apply-filters">Apply</button>
        </div>
    </form>
</div>
			</div>
           <button id="export-btn" class="btn bg-body btn-active-color-primary">
                Export to Excel
            </button>




<!-- CSRF token meta -->
<meta name="csrf-token" content="{{ csrf_token('swap_products') }}">



		</div>
	</div>
</div>


    <div class="d-flex flex-column flex-root">
        <div class="page d-flex flex-row flex-column-fluid">
            <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">
                <div id="kt_content_container" class="d-flex flex-column-fluid align-items-start container-xl">
                    <div class="content flex-row-fluid" id="kt_content">
                        <div class="row gy-5 g-xl-8"> 
                            <div class="card card-xl-stretch mb-5 mb-xl-8">
                                <div class="card-header border-0 pt-5">
                            
                                   <div class="card-title ">
                                        <!--begin::Search-->
                                        <div class="d-flex align-items-center position-relative my-1">
                                            <i class="ki-duotone ki-magnifier fs-3 position-absolute ms-4">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                            </i>
                                            <input type="text" id="product-search-input" class="form-control form-control-solid w-250px ps-12" placeholder="Search Product" onkeyup="filterProducts()">
                                        </div>
                                        <!--end::Search-->
                                    </div>
                                    <div class="card-toolbar" data-bs-toggle="tooltip" data-bs-placement="top"
                                        data-bs-trigger="hover" title="Click to add a product">
                                        <a class="btn btn-sm btn-light btn-active-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_add_produit">
                                            <i class="ki-duotone ki-plus fs-2"></i>New product
                                        </a> 
                                    </div>
                                </div>

                               <div class="card-body py-3">
    <div class="table-responsive">
        <table class="table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4">
            <thead>
                <tr class="fw-bold text-muted"> 
                    <th></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Old Price</th>
                    <th>Reduction</th>
                    <th>Category</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for produit in produits %}
                    <tr data-category-id="{{ produit.categorie.id }}" 
                        data-price="{{ produit.prix }}"
                        data-old-price="{{ produit.prixAncien ?? 0 }}"
                        data-reduction="{{ produit.reduction ?? 0 }}">
                        <td>
                            {% if produit.image %}
                                <img src="{{ asset(produit.image) }}" class="w-50px h-50px rounded">
                            {% else %}
                                <span class="text-muted">No image</span>
                            {% endif %}
                        </td>
                        <td>{{ produit.nom }}</td>
                        <td>{{ produit.description }}</td>
                        <td>{{ produit.prix }} TND</td>
                        <td>
                            {% if produit.prixAncien %}
                                <span class="text-decoration-line-through text-muted">{{ produit.prixAncien }} TND</span>
                            {% else %}
                                â€”
                            {% endif %}
                        </td>
                        <td>
                            {% if produit.reduction %}
                                {{ produit.reduction }}%
                            {% else %}
                                â€”
                            {% endif %}
                        </td>
                        <td>{{ produit.categorie.nom }}</td>
                        <td class="text-end">
                            <div class="d-flex justify-content-end flex-shrink-0">
                                <a href="{{ path('app_produit_show', {id: produit.id}) }}"
                                    class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">
                                        <i class="ki-duotone ki-switch fs-2"><span class="path1"></span><span class="path2"></span></i>
                                </a>
                                <a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1"
                                   data-bs-toggle="modal" data-bs-target="#kt_modal_edit_produit_{{ produit.id }}">
                                    <i class="ki-duotone ki-pencil text-primary fs-2">
                                     <span class="path1"></span><span class="path2"></span>
                                    </i>
                                </a>
                                <a href="{{ path('app_produit_delete', {id: produit.id}) }}"
                                   class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm"
                                   onclick="return confirm('Are you sure you want to delete this product?')">
                                        <i class="ki-duotone ki-trash fs-2 text-danger">
                                            <span class="path1"></span><span class="path2"></span>
                                            <span class="path3"></span><span class="path4"></span>
                                            <span class="path5"></span>
                                        </i>
                                </a>
                            </div>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="9" class="text-center text-muted">No products found</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>
                            </div>
                        </div> 
                    </div>
                </div>
            </div>
        </div>
    </div>

 
    <!-- Add Product Modal -->
    <div class="modal fade" id="kt_modal_add_produit" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered mw-750px">
            <div class="modal-content">
                <div class="modal-header" id="kt_modal_add_produit_header">
                    <h2 class="fw-bold">Add Product</h2>
                    <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                        <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                    </div>
                </div>

                {{ form_start(form, {
                    'action': path('app_produit_new'),
                    'attr': {
                        'id': 'kt_modal_add_produit_form',
                        'class': 'form',
                        'enctype': 'multipart/form-data'
                    }
                }) }}

                <div class="modal-body px-5 my-7">
                    <div class="d-flex flex-column scroll-y px-5 px-lg-10"
                         data-kt-scroll="true"
                         data-kt-scroll-max-height="auto"
                         data-kt-scroll-dependencies="#kt_modal_add_produit_header"
                         data-kt-scroll-wrappers="#kt_modal_add_produit_scroll"
                         data-kt-scroll-offset="300px">

                        <!-- Name -->
                        <div class="fv-row mb-7">
                            <label class="required fw-semibold fs-6 mb-2">Name</label>
                            {{ form_widget(form.nom, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(form.nom) }}
                        </div>

                        <!-- Description -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Description</label>
                            {{ form_widget(form.description, {'attr': {'class': 'form-control form-control-solid', 'rows': 3}}) }}
                            {{ form_errors(form.description) }}
                        </div>

                        <!-- Image -->
                        <div class="fv-row mb-7">
                            <label class="d-block fw-semibold fs-6 mb-5">Image</label>

                            <style>
                                .image-input-placeholder {
                                    background-image: url("{{ asset('assets/media/svg/files/blank-image.svg') }}");
                                }
                                [data-bs-theme="dark"] .image-input-placeholder {
                                    background-image: url("{{ asset('assets/media/svg/files/blank-image-dark.svg') }}");
                                }
                            </style>

                            <div class="image-input image-input-outline image-input-placeholder image-input-empty"
                                 data-kt-image-input="true">
                                <div class="image-input-wrapper w-125px h-125px" style="background-image: none;"></div>

                                <label for="produit_imageFile"
                                       class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow"
                                       data-kt-image-input-action="change" data-bs-toggle="tooltip" title="Change image">
                                    <i class="ki-duotone ki-pencil fs-7"><span class="path1"></span><span class="path2"></span></i>
                                    {{ form_widget(form.imageFile, {
                                        'label': false,
                                        'attr': {
                                            'id': 'produit_imageFile',
                                            'class': 'd-none',
                                            'accept': '.png,.jpg,.jpeg'
                                        }
                                    }) }}
                                </label>

                                <input type="hidden" name="image_remove" value="0">

                                <span class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow"
                                      data-kt-image-input-action="cancel" data-bs-toggle="tooltip" title="Cancel image">
                                    <i class="ki-duotone ki-cross fs-2"></i>
                                </span>
                                <span class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow"
                                      data-kt-image-input-action="remove" data-bs-toggle="tooltip" title="Remove image">
                                    <i class="ki-duotone ki-cross fs-2"></i>
                                </span>
                            </div>

                            <div class="form-text">Allowed file types: png, jpg, jpeg.</div>
                            {{ form_errors(form.imageFile) }}
                        </div>

                        <!-- Price -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Price</label>
                            {{ form_widget(form.prix, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(form.prix) }}
                        </div>

                        <!-- Old Price -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Old Price</label>
                            {{ form_widget(form.prixAncien, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(form.prixAncien) }}
                        </div>

                        <!-- Reduction -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Reduction (%)</label>
                            {{ form_widget(form.reduction, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(form.reduction) }}
                        </div>

                        <!-- Category -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Category</label>
                            {{ form_widget(form.categorie, {'attr': {'class': 'form-select form-select-solid'}}) }}
                            {{ form_errors(form.categorie) }}
                        </div>
                    </div>
                </div>

                <div class="modal-footer text-center">
                    <button type="reset" class="btn btn-light me-3" data-bs-dismiss="modal">Discard</button>
                    <button type="submit" class="btn btn-primary">
                        <span class="indicator-label">Submit</span>
                        <span class="indicator-progress" style="display:none;">
                            Please wait...
                            <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                        </span>
                    </button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>
    
    <!-- Edit Product Modals -->
    {% for produit in produits %}
    <div class="modal fade" id="kt_modal_edit_produit_{{ produit.id }}" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered mw-750px">
            <div class="modal-content">
                <div class="modal-header" id="kt_modal_edit_produit_header_{{ produit.id }}">
                    <h2 class="fw-bold">Edit Product</h2>
                    <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                        <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                    </div>
                </div>

                {{ form_start(editForms[produit.id], {
                    'action': path('app_produit_edit', {'id': produit.id}),
                    'attr': {
                        'id': 'kt_modal_edit_produit_form_' ~ produit.id,
                        'class': 'form',
                        'enctype': 'multipart/form-data'
                    }
                }) }}

                <div class="modal-body px-5 my-7">
                    <div class="d-flex flex-column scroll-y px-5 px-lg-10"
                         data-kt-scroll="true"
                         data-kt-scroll-max-height="auto"
                         data-kt-scroll-dependencies="#kt_modal_edit_produit_header_{{ produit.id }}"
                         data-kt-scroll-wrappers="#kt_modal_edit_produit_scroll_{{ produit.id }}"
                         data-kt-scroll-offset="300px">

                        <!-- Name -->
                        <div class="fv-row mb-7">
                            <label class="required fw-semibold fs-6 mb-2">Name</label>
                            {{ form_widget(editForms[produit.id].nom, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(editForms[produit.id].nom) }}
                        </div>

                        <!-- Description -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Description</label>
                            {{ form_widget(editForms[produit.id].description, {'attr': {'class': 'form-control form-control-solid', 'rows': 3}}) }}
                            {{ form_errors(editForms[produit.id].description) }}
                        </div>

                        <!-- Image -->
                        <div class="fv-row mb-7">
                            <label class="d-block fw-semibold fs-6 mb-5">Image</label>

                            <div class="image-input image-input-outline {% if not produit.image %}image-input-placeholder{% endif %}"
                                 data-kt-image-input="true" id="image-input-edit-{{ produit.id }}">
                                <div class="image-input-wrapper w-125px h-125px" 
                                    {% if produit.image %}
                                        style="background-image: url('{{ asset(produit.image) }}')"
                                    {% endif %}>
                                </div>

                                <label class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow"
                                    data-kt-image-input-action="change" data-bs-toggle="tooltip" title="Change image">
                                    <i class="ki-duotone ki-pencil fs-7">
                                    <span class="path1"></span>
                                    <span class="path2"></span>
                                    </i>
                                    {{ form_widget(editForms[produit.id].imageFile, {
                                        'label': false,
                                        'attr': {
                                            'class': 'd-none',
                                            'accept': '.png,.jpg,.jpeg',
                                            'data-edit-id': produit.id
                                        }
                                    }) }}
                                </label>

                                <input type="hidden" name="image_remove" value="0">

                                <span class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow"
                                    data-kt-image-input-action="cancel" data-bs-toggle="tooltip" title="Cancel image">
                                    <i class="ki-duotone ki-cross fs-2"></i>
                                </span>
                                <span class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow"
                                    data-kt-image-input-action="remove" data-bs-toggle="tooltip" title="Remove image">
                                    <i class="ki-duotone ki-cross fs-2"></i>
                                </span>
                            </div>

                            <div class="form-text">Allowed file types: png, jpg, jpeg.</div>
                            {{ form_errors(editForms[produit.id].imageFile) }}
                        </div>

                        <!-- Price -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Price</label>
                            {{ form_widget(editForms[produit.id].prix, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(editForms[produit.id].prix) }}
                        </div>

                        <!-- Old Price -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Old Price</label>
                            {{ form_widget(editForms[produit.id].prixAncien, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(editForms[produit.id].prixAncien) }}
                        </div>

                        <!-- Reduction -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Reduction (%)</label>
                            {{ form_widget(editForms[produit.id].reduction, {'attr': {'class': 'form-control form-control-solid'}}) }}
                            {{ form_errors(editForms[produit.id].reduction) }}
                        </div>

                        <!-- Category -->
                        <div class="fv-row mb-7">
                            <label class="fw-semibold fs-6 mb-2">Category</label>
                            {{ form_widget(editForms[produit.id].categorie, {'attr': {'class': 'form-select form-select-solid'}}) }}
                            {{ form_errors(editForms[produit.id].categorie) }}
                        </div>
                    </div>
                </div>

                <div class="modal-footer text-center">
                    <button type="reset" class="btn btn-light me-3" data-bs-dismiss="modal">Discard</button>
                    <button type="submit" class="btn btn-primary">
                        <span class="indicator-label">Update</span>
                        <span class="indicator-progress" style="display:none;">
                            Please wait...
                            <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                        </span>
                    </button>
                </div>

                {{ form_end(editForms[produit.id]) }}
            </div>
        </div>
    </div>
    {% endfor %}

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize image inputs for edit modals when they are shown
        document.querySelectorAll('[id^="kt_modal_edit_produit_"]').forEach(modal => {
            modal.addEventListener('shown.bs.modal', function() {
                const imageInputs = this.querySelectorAll('[data-kt-image-input="true"]');
                imageInputs.forEach(input => {
                    // Check if already initialized
                    if (input.getAttribute('data-kt-initialized') !== 'true') {
                        // Initialize the image input
                        if (typeof KTImageInput !== 'undefined') {
                            new KTImageInput(input);
                            input.setAttribute('data-kt-initialized', 'true');
                        }
                    }
                });
            });
        });
        
        // Also initialize any existing image inputs on page load
        const imageInputs = document.querySelectorAll('[data-kt-image-input="true"]');
        imageInputs.forEach(input => {
            if (input.getAttribute('data-kt-initialized') !== 'true') {
                if (typeof KTImageInput !== 'undefined') {
                    new KTImageInput(input);
                    input.setAttribute('data-kt-initialized', 'true');
                }
            }
        });
        
        // Handle manual click for image file inputs
        document.addEventListener('click', e => {
            const label = e.target.closest('label[data-kt-image-input-action="change"]');
            if (!label) return;
            const fileInput = label.querySelector('input[type="file"]');
            if (fileInput) fileInput.click();
        });
    });


    document.addEventListener('DOMContentLoaded', function() {
    // Get filter elements
    const categoryFilter = document.getElementById('filter-category'); 
    const minPriceFilter = document.getElementById('filter-min-price');
    const maxPriceFilter = document.getElementById('filter-max-price');
    const applyFiltersBtn = document.getElementById('apply-filters');
    const resetFiltersBtn = document.getElementById('reset-filters');
    
    // Get all product rows
    const productRows = document.querySelectorAll('table tbody tr');
    
    // Function to filter products
    function filterProducts() {
        const selectedCategory = categoryFilter.value; 
        const minPrice = minPriceFilter.value ? parseFloat(minPriceFilter.value) : null;
        const maxPrice = maxPriceFilter.value ? parseFloat(maxPriceFilter.value) : null;
        
        productRows.forEach(row => {
            let showRow = true;
            
            // Category filter
            if (selectedCategory) {
                const rowCategoryId = row.getAttribute('data-category-id');
                if (rowCategoryId !== selectedCategory) {
                    showRow = false;
                }
            }
            
         
            
            // Price filter
            if (minPrice !== null || maxPrice !== null) {
                const price = parseFloat(row.getAttribute('data-price'));
                
                if ((minPrice !== null && price < minPrice) || 
                    (maxPrice !== null && price > maxPrice)) {
                    showRow = false;
                }
            }
            
            // Show/hide row
            row.style.display = showRow ? '' : 'none';
        });
    }
    
    // Apply filters
    if (applyFiltersBtn) {
        applyFiltersBtn.addEventListener('click', filterProducts);
    }
    
    // Reset filters
    if (resetFiltersBtn) {
        resetFiltersBtn.addEventListener('click', function() {
            if (categoryFilter) categoryFilter.value = ''; 
            if (minPriceFilter) minPriceFilter.value = '';
            if (maxPriceFilter) maxPriceFilter.value = '';
            
            productRows.forEach(row => {
                row.style.display = '';
            });
        });
    }
});


    </script>

    <script>
function filterProducts() {
    const searchInput = document.getElementById('product-search-input');
    const searchTerm = searchInput.value.toLowerCase();
    const productRows = document.querySelectorAll('table tbody tr');
    
    productRows.forEach(row => {
        // Skip the "no products" row
        if (row.classList.contains('no-products-row')) {
            return;
        }
        
        // Get text from searchable columns (name, description, category)
        const name = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
        const description = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
        const category = row.querySelector('td:nth-child(7)').textContent.toLowerCase();
        
        // Check if search term exists in any of these columns
        if (name.includes(searchTerm) || 
            description.includes(searchTerm) || 
            category.includes(searchTerm)) {
            row.style.display = ''; // Show row
        } else {
            row.style.display = 'none'; // Hide row
        }
    });
    
    // Check if all rows are hidden and show message if needed
    checkNoResults();
}

function checkNoResults() {
    const visibleRows = document.querySelectorAll('table tbody tr:not([style*="display: none"])');
    const noResultsRow = document.querySelector('.no-products-row');
    const searchInput = document.getElementById('product-search-input');
    
    // If no visible rows and search is not empty, show no results message
    if (visibleRows.length === 0 && searchInput.value.trim() !== '') {
        if (!noResultsRow) {
            const tbody = document.querySelector('table tbody');
            const newRow = document.createElement('tr');
            newRow.className = 'no-products-row';
            newRow.innerHTML = '<td colspan="9" class="text-center text-muted">No products found matching your search</td>';
            tbody.appendChild(newRow);
        }
    } else if (noResultsRow) {
        // Remove no results message if it exists and we have results
        noResultsRow.remove();
    }
}

// Debounce function to improve performance
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// Initialize when page loads
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('product-search-input');
    
    if (searchInput) {
        // Use debounced version for better performance
        const debouncedFilter = debounce(filterProducts, 300);
        searchInput.addEventListener('input', debouncedFilter);
        
        // Also trigger search on page load if there's already text in the input
        if (searchInput.value) {
            filterProducts();
        }
    }
    
    // Ensure all modals work properly (important for edit functionality)
    document.addEventListener('click', function(e) {
        // Handle edit buttons that open modals
        if (e.target.closest('[data-bs-toggle="modal"]')) {
            const button = e.target.closest('[data-bs-toggle="modal"]');
            const targetModal = button.getAttribute('data-bs-target');
            
            if (targetModal) {
                const modalElement = document.querySelector(targetModal);
                if (modalElement && typeof bootstrap !== 'undefined' && bootstrap.Modal) {
                    const modal = new bootstrap.Modal(modalElement);
                    modal.show();
                }
            }
        }
        
        // Handle delete confirmation
        if (e.target.closest('a[href*="delete"]')) {
            const link = e.target.closest('a[href*="delete"]');
            // Prevent default and show confirmation
            e.preventDefault();
            if (confirm('Are you sure you want to delete this product?')) {
                window.location.href = link.href;
            }
        }
    });
});




</script>
<script>
document.getElementById('export-btn').addEventListener('click', function() {
    // Select the table
    const table = document.querySelector('.table');

    // Convert table to worksheet
    const wb = XLSX.utils.book_new();
    const ws = XLSX.utils.table_to_sheet(table);

    XLSX.utils.book_append_sheet(wb, ws, "Products");

    // Download the Excel file
    XLSX.writeFile(wb, "products.xlsx");
});
document.getElementById('swap-btn').addEventListener('click', () => {
    const selected = document.querySelectorAll('#products-switch-menu .select-product:checked');

    if (selected.length !== 2) {
        alert('Please select exactly 2 products to swap.');
        return;
    }

    const id1 = selected[0].dataset.id;
    const id2 = selected[1].dataset.id;

    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
const swapUrl = '{{ path("app_products_swap") }}';

fetch(swapUrl, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
        'X-CSRF-TOKEN': csrfToken
    },
    body: JSON.stringify({ id1, id2 })
})
.then(res => {
    if (!res.ok) throw new Error('Server error: ' + res.status);
    return res.json();
})
.then(data => {
    if (data.success) {
        // Reload page after successful swap
        window.location.reload();
    } else {
        alert('Swap failed: ' + (data.message || 'Unknown error'));
        // Reload page even if swap failed
        window.location.reload();
    }
})
.catch(err => {
    console.error('Swap request failed:', err);
    // Reload page even on network/server error
    window.location.reload();
});

});

</script>

 

</body>
{% endblock %}